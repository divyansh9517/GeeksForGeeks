class Solution {
  public:
  
    bool solve(vector<int> &arr,int mid , int k)
    {
        int totalHr = 0;
        for(int i = 0 ; i < arr.size() ; i++)
        {
            if(arr[i]%mid ==0)
            {
                totalHr += arr[i]/mid;
            }
            else{
                totalHr += (arr[i]/mid+1)  ;          
                
            }
        }
        return totalHr <= k;
    }
    int kokoEat(vector<int>& arr, int k) {
        // Code here
        int low = 1;
        int high = *max_element(arr.begin(),arr.end());
        
        while(low <= high)
        {
            int mid = low+(high-low)/2;
            if(solve(arr,mid,k)){
                high = mid - 1;
            }
            else{
                low = mid+1;
            }
        }
        return low;
    }
};
