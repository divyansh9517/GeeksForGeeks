class Solution {
  public:
    bool solve(vector<int>& arr,int k ,int mid)
    {
        int sum = 0;
        for(int i = 0 ; i < arr.size();i++)
        {
            // if(arr[i]%mid ==0)
            // {
            //     sum += arr[i]/mid;
            // }
            // else{
            //     (sum += arr[i]/mid + 1);
            // }
            
            sum += ceil((double)(arr[i])/(double)mid);
        }
        return sum <= k;
    }
    int smallestDivisor(vector<int>& arr, int k) {

        // Write your code here.
        int low = 1;
        int high = *max_element(arr.begin(),arr.end());
        
        while(low <= high)
        {
            int mid = low + (high - low)/2;
            
            if(solve(arr,k,mid))
            {
                high = mid -1;
            }
            else{
                low = mid +1;
            }
        }
        return low ;
        
    }
};
