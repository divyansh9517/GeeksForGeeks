int trap(vector<int>& height) {
        if (height.empty()) return 0; // Handle edge case
        
        int res = 0;
        int n = height.size();
        vector<int> lb(n), rb(n);
        
        lb[0] = height[0];
        for (int i = 1; i < n - 1; i++) {
            lb[i] = max(height[i], lb[i - 1]);
        }
        
        rb[n - 1] = height[n - 1];
        for (int i = n - 2; i >= 0; i--) {
            rb[i] = max(height[i], rb[i + 1]);
        }
        
        for (int i = 1; i < n - 1; i++) {
            res += min(lb[i], rb[i]) - height[i];
        }
        
        return res;
    }
    int maxWater(vector<int> &arr) {
        // code here
        return trap(arr);
    }
