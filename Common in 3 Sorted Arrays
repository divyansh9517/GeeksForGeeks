 vector<int> commonElements(vector<int> &arr1, vector<int> &arr2,
                               vector<int> &arr3) {
                                   
        
    // set<int> a, b, c;


    // for (int i = 0; i < arr1.size(); i++) {
    //     a.insert(arr1[i]);
    // }
    // for (int i = 0; i < arr2.size(); i++) {
    //     b.insert(arr2[i]);
    // }
    // for (int i = 0; i < arr3.size(); i++) { 
    //     c.insert(arr3[i]);
    // }

    
    // unordered_map<int, int> m;

  
    // for (auto it = a.begin(); it != a.end(); it++) {
    //     m[*it]++;
    // }

    
    // for (auto it = b.begin(); it != b.end(); it++) {
    //     m[*it]++;
    // }

    
    // for (auto it = c.begin(); it != c.end(); it++) {
    //     m[*it]++;
    // }

    
    // vector<int> ans;
    // for (auto i : m) {
    //     if (i.second == 3) { 
    //         ans.push_back(i.first);
    //     }
    // }

    // if (ans.empty()) {
    //     return {-1};
    // }

   
    // sort(ans.begin(), ans.end());
    // return ans;
        
    // }
    vector<int>ans;
    int i = 0 ;
    int j = 0 ;
    int k = 0 ;
    
    while(i < arr1.size() && j < arr2.size() && k < arr3.size())
    {
        if(arr1[i] == arr2[j] && arr2[j] == arr3[k])
        {
            if(ans.empty() || ans.back() != arr1[i])
            {
                ans.push_back(arr1[i]);
                
            }
            i++,j++,k++;
        }
        else if(arr1[i] < arr2[j])
        {
            i++;
        }
        else if(arr2[j] < arr3[k])
        {
            j++;
        }
        else
        {
            k++;
        }
    }
    if(ans.size() == 0 )
    {
        return {-1};
    }
    return ans;
                               }
    
