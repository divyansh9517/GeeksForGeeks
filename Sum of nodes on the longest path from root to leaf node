class Solution
{
    public:
    pair<int,int> height(Node* root)
    {
        if(!root)
        {
            return{0,0};
        }
        auto lh=height(root->left);
        auto rh=height(root->right);
        
        int sum = root->data;
        if(lh.first == rh.first)
        {
            sum += lh.second > rh.second ? lh.second : rh.second;
        }
        else if(lh.first > rh.first)
        {
            sum += lh.second;
        }
        else
        {
            sum += rh.second;
        }
        return {max(lh.first,rh.first)+1,sum};
    }
    
    int sumOfLongRootToLeafPath(Node *root)
    {
        //code here
        auto h = height(root);
        return h.second;
    }
};

//{ Driver Code Starts.

int main()
{

    int t;
    scanf("%d", &t);
    cin.ignore();
    while (t--)
    {
        string treeString;
        getline(cin, treeString);
        Node *root = buildTree(treeString);
        Solution obj;
        int res = obj.sumOfLongRootToLeafPath(root);
        cout << res << "\n";
    
cout << "~" << "\n";
}
    return 0;
}
// } Driver Code Ends
