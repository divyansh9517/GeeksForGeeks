class Solution {
  public:
    int longestSubarrayDivK(vector<int>& arr, int k) {
        // Complete the function
        int ans = 0 ;
        int n = arr.size();
        unordered_map<int,int> mpp;
        int sum = 0;
        for(int i = 0 ; i< n ;i++)
        {
            sum = ((sum+arr[i])%k + k )% k;
            if(sum == 0)
            {
                ans = i + 1;
            }
            
            else if(mpp.find(sum)!= mpp.end())
            {
                ans = max(ans,i - mpp[sum]);
            }
            else
            {
                mpp[sum] = i;
            }
        }
        return ans;
    }
};
